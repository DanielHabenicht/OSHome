ubihome:
  name: new_awesome

logger:
  level: info
  directory: ./logs
  logs:
    libmdns: INFO
    ubihome_mqtt: debug
    ubihome_shell: debug
    ubihome: debug
    # ubihome_api: debug
    # ubihome_bluetooth_proxy: debug
    # rumqttc: debug

mdns:
  ip: "192.168.178.33"
  mac: "18:65:71:EB:5A:FB"

# mqtt: 
#   broker: 127.0.0.1
#   port: 1883
#   username: user
#   password: password

mqtt: 
  broker: 192.168.178.167
  username: test
  password: a887aeda-7248-4b0f-a2e7-6f4ee0026f5e

gpio:
  device: raspberryPi

shell: 
  type: bash

power_utils:

button: 
#  - platform: shell
#    id: my_button
#    name: "Write Hello World"
#    command: "echo 'Hello World!' >> test.log"

#  - platform: shell
#    id: disconnect_speaker
#    name: "Disconnect Speaker"
#    command: bluetoothctl -- disconnect 00:12:6F:F1:FF:61

#  - platform: power_utils
#    name: "Logout"
#    action: logout


sensor:
#   - platform: shell
#     name: "RAM Usage"
#     id: ram_usage
#     icon: mdi:memory
#     state_class: "measurement"
#     unit_of_measurement: "%"
#     update_interval: 30s # 0 only executes it once and assumes a long running processes.
#     command: |-
#       echo test
#       # free | grep Mem | awk '{print $3/$2 * 100.0}'
#     # device_class: "data_size"
#   - platform: bme280
#     update_interval: 30s # 0 only executes it once and assumes a long running processes.
#     name: "bla"

binary_sensor:
  - platform: shell
    name: "Binary Sensor"
    id: binary_sensor
    icon: "mdi:bluetooth-settings"
    device_class: presence
    update_interval: 10s
    command: |-
      cat binary_testfile
    on_press:
      then:
        - switch.turn_on: "test_switch"
    on_release:
      then:
        - switch.turn_off: "test_switch"

  # - platform: gpio
  #   name: "motion"
  #   icon: "mdi:motion-sensor"
  #   device_class: presence
  #   pin: 23 # 17
  #   pull_up: true
  #   update_interval: "0s"


switch:
  - platform: shell
    name: "Test Switch"
    id: "test_switch"
    command_on: "echo true > testfile"
    command_off: "echo false > testfile"
    command_state: "cat testfile"
    # update_interval: 10s



# TODO: Things still to implement...
# TODO: Dynamic compilation based on configured options - currently everything is compiled.
os:
  type: windows

text_sensor:
  - platform: version
    name: "Firmware"



# Native Homeassistant API
api:
  encryption:
    key: "token"

# Enable Automatic updates
ota:
  - platform: ubihome
    password: "ea04d2dc1adb3b82edea4b97ced1cc7c"