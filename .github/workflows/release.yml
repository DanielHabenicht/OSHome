name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu # tested in a debian container on a mac
          os: ubuntu-latest
        - target: aarch64-unknown-linux-gnu # tested on aws t4g.nano
          os: ubuntu-latest
        - target: armv7-unknown-linux-gnueabihf # raspberry pi 2-3-4, not tested
          os: ubuntu-latest
        - target: arm-unknown-linux-gnueabihf # raspberry pi 0-1, not tested
          os: ubuntu-latest
        - target: x86_64-apple-darwin # tested on a mac, is not properly signed so there are security warnings
          os: macos-latest
        - target: x86_64-pc-windows-msvc # tested on a windows machine
          os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
  
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8
        with:
          key: release
  
      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Prepare artifacts tests
        run: |
          rm -r target/${{ matrix.target }}/release/deps
          rm -r target/${{ matrix.target }}/release/build
          rm -r target/${{ matrix.target }}/release/examples
          rm -r target/${{ matrix.target }}/release/incremental


      - name: Prepare artifact
        run: |
          mkdir -p artifact
          cp target/${{ matrix.target }}/release/* artifact/
          zip -j artifact/${{ matrix.target }}-${{ github.ref_name }}.zip artifact/*

      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} artifact/${{ matrix.target }}-${{ github.ref_name }}.zip
